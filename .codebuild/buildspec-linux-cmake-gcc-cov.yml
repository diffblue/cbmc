version: 0.2

env:
  variables:
    # CodeBuild console doesn't display color codes correctly
    TESTPL_COLOR_OUTPUT: 0

phases:
  install:
    runtime-versions:
      java: openjdk8    
    commands:
      - sed -i 's#/archive.ubuntu.com#/us-east-1.ec2.archive.ubuntu.com#g' /etc/apt/sources.list
      - add-apt-repository ppa:ubuntu-toolchain-r/test
      - apt-get update -y
      - apt-get install -y flex bison make git libwww-perl patch ccache libc6-dev-i386 jq lcov cmake curl gdb
  build:
    commands:
      - echo Build started on `date`
      - git submodule update --init --recursive
      - cmake -S . -Bbuild '-Denable_coverage=1' '-Dparallel_tests=2' '-DCMAKE_CXX_COMPILER=/usr/bin/g++'
      - cmake --build build --target coverage -- -j2
  post_build:
    commands:
      - lcov --capture --directory build --output-file lcov.info
      - lcov --remove lcov.info '/usr/*' --output-file lcov.info
      # If $CODEBUILD_SOURCE_VERSION starts with 'pr/', filter out pr number, if not, return empty
      - VCS_PULL_REQUEST=$(echo $CODEBUILD_SOURCE_VERSION | sed '/^pr\//!d;s/^pr\///')
      # If $CODEBUILD_SOURCE_VERSION is commit id, set $VCS_COMMIT_ID
      - VCS_COMMIT_ID=$(echo $CODEBUILD_SOURCE_VERSION | sed -r '/^[a-z0-9]{40}$/!d')
      - COV_SCRIPT=/root/.cache/codecov.sh
      - if [ ! -f "$COV_SCRIPT" ]; then curl -s https://codecov.io/bash > "$COV_SCRIPT"; fi
      - bash "$COV_SCRIPT" -t "$CODECOV_TOKEN" || true
      - echo Build completed on `date`
cache:
  paths:
    - '/var/cache/apt/**/*'
    - '/var/lib/apt/lists/**/*'
    - '/root/.ccache/**/*'
    - '/root/.cache/codecov.sh'
