language: cpp

cache: ccache

matrix:
  include:
    # Alpine Linux with musl-libc using g++
    - os: linux
      sudo: required
      compiler: gcc
      services:
        - docker
      before_install:
        - docker pull diffblue/cbmc-builder:alpine-0.0.1
        - env > .env
      install:
        - docker run --env-file .env -v ${TRAVIS_BUILD_DIR}:/cbmc -v ${HOME}/.ccache:/root/.ccache diffblue/cbmc-builder:alpine-0.0.1 sh -c "./travis_install.sh"
      script:
        - docker run --env-file .env -v ${TRAVIS_BUILD_DIR}:/cbmc -v ${HOME}/.ccache:/root/.ccache diffblue/cbmc-builder:alpine-0.0.1 sh -c "./travis_script.sh"
      env:
        - COMPILER="ccache g++"

    # OS X using g++
    - os: osx
      sudo: false
      compiler: gcc
      before_install:
          #we create symlink to non-ccache gcc, to be used in tests
        - mkdir bin ; ln -s /usr/bin/gcc bin/gcc
        - HOMEBREW_NO_AUTO_UPDATE=1 brew install ccache
        - export PATH=/usr/local/opt/ccache/libexec:$PATH
        - ccache -M 1G
      env:
        - COMPILER="g++"
        - SAN_FLAGS="-fsanitize=address -fno-omit-frame-pointer"
        - LINKFLAGS="${SAN_FLAGS}"

    # OS X using clang++
    - os: osx
      sudo: false
      compiler: clang
      before_install:
        - HOMEBREW_NO_AUTO_UPDATE=1 brew install ccache
        - export PATH=/usr/local/opt/ccache/libexec:$PATH
        - ccache -M 1G
      env:
        - COMPILER="ccache clang++ -Qunused-arguments -fcolor-diagnostics"
        - CCACHE_CPP2="yes"
        - SAN_FLAGS="-fsanitize=address -fno-omit-frame-pointer"
        - LINKFLAGS="${SAN_FLAGS}"

    # Ubuntu Linux with glibc using g++-5
    - os: linux
      sudo: false
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - libwww-perl
            - g++-5
            - libubsan0
            - libasan0
      before_install:
        - mkdir bin ; ln -s /usr/bin/gcc-5 bin/gcc
      env:
        - COMPILER="g++-5"
        - SAN_FLAGS="-fsanitize=address,undefined -fno-omit-frame-pointer"
        - LINKFLAGS="-fuse-ld=gold ${SAN_FLAGS}"

    # Ubuntu Linux with glibc using g++-5, debug mode
    - os: linux
      sudo: false
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - libwww-perl
            - g++-5
            - libubsan0
            - libasan0
      before_install:
        - mkdir bin ; ln -s /usr/bin/gcc-5 bin/gcc
      env:
        - EXTRA_CXXFLAGS="-DDEBUG"
        - COMPILER="g++-5"
        - SAN_FLAGS="-fsanitize=address,undefined -fno-omit-frame-pointer"
        - LINKFLAGS="-fuse-ld=gold ${SAN_FLAGS}"
      script:
        - echo "Not running any tests for a debug build."

    # Ubuntu Linux with glibc using clang++-3.8
    - os: linux
      sudo: false
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - libwww-perl
            - clang-3.8
            - libstdc++-5-dev
            - libubsan0
            - libasan0
      before_install:
        - mkdir bin ; ln -s /usr/bin/clang-3.8 bin/gcc
      env:
        - COMPILER="ccache clang++-3.8 -Qunused-arguments -fcolor-diagnostics"
        - CCACHE_CPP2="yes"
        - SAN_FLAGS="-fsanitize=address,undefined -fno-omit-frame-pointer"
        - LINKFLAGS="-fuse-ld=gold ${SAN_FLAGS}"

    - env: NAME="CPP-LINT"
      install:
      script: scripts/travis_lint.sh
      before_cache:

  allow_failures:
    - env: NAME="CPP-LINT"
      install:
      script: scripts/travis_lint.sh
      before_cache:

install:
  - sh travis_install.sh

script:
  - sh travis_script.sh

before_cache:
  - ccache -s
