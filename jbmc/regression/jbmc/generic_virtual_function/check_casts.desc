CORE
Base.class
--function Base.main --show-goto-functions
^EXIT=0$
^SIGNAL=0$
\(struct Impl1 \*\)b \. Impl1\.f:\(Ljava/lang/Object;\)V\(\(struct java\.lang\.Object \*\)this->genericData\);
\(struct Impl2 \*\)b \. Impl2\.f:\(Ljava/lang/Object;\)V\(\(struct java\.lang\.Object \*\)this->genericData\);
\(struct Impl2 \*\)b \. Impl2\.g:\(Ljava/lang/String;\)V\(this->nonGenericData\);
\(struct Impl1 \*\)b \. Impl1\.g:\(Ljava/lang/String;\)V\(this->nonGenericData\);
--
--
Both the implementation classes use a different generic token (Impl1::T and Impl2::T) to refer
to the generically-typed method f() and so a cast is needed. By contrast the concrete-typed
virtual method g() does not need one.
