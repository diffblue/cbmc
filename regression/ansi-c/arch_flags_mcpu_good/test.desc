CORE
preproc.i
-mcpu=cortex-a15 -o linked-object.gb object.arm
^EXIT=0$
^SIGNAL=0$
--
^warning: ignoring
^CONVERSION ERROR$
--
This tests the -mcpu=cortex-a15 flag that should activate ARM-32 mode.
The object file 'object.arm' was compiled from 'source.c' with goto-cc
along with an ARM cross-compiler on a 64-bit platform with the following
command line:

  goto-cc -o object.arm --native-compiler=arm-none-eabi-gcc -mcpu=cortex-a15 -c source.c

To regenerate object.arm on an x86_64 machine, you will need to install
an ARM-32 cross compiler and pass the name of that compiler to the
--native-compiler flag. On Ubuntu, you can get a suitable compiler
using:

  sudo apt install gcc-arm-none-eabi

which will install arm-none-eabi-gcc (amongst other things).

preproc.i is already pre-processed so that it can be linked in without
needing to invoke a pre-processor from a cross-compile toolchain on your
local machine. Linking it together with the ARM object file, while
passing -mcpu=cortex-a15 on the command line, should succeed.
