CORE dfcc-only
main.c
--no-standard-checks --dfcc main --apply-loop-contracts
^EXIT=0$
^SIGNAL=0$
^\[main.loop_invariant_base.\d+\] line 9 Check invariant before entry for loop .*: SUCCESS$
^\[main.loop_invariant_base.\d+\] line 9 Check invariant before entry for loop .*: SUCCESS$
^\[main.loop_invariant_step.\d+\] line 9 Check invariant after step for loop .*: SUCCESS$
^\[main.loop_step_unwinding.\d+\] line 9 Check step was unwound for loop .*: SUCCESS$
^\[main.loop_decreases.\d+\] line 9 Check variant decreases after step for loop .*: SUCCESS$
^\[main.assigns.\d+\] .* Check that \*a is assignable: SUCCESS$
^\[main\.assertion\.\d+\] .* assertion \*a == N: SUCCESS$
^VERIFICATION SUCCESSFUL$
--
This test checks that C expressions are correctly converted to logic
when enforcing loop invariant annotations.
