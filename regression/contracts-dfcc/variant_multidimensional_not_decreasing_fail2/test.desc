CORE dfcc-only
main.c
--no-standard-checks --dfcc main --apply-loop-contracts
^\[main.loop_assigns.\d+\] line 6 Check assigns clause inclusion for loop .*: SUCCESS$
^\[main.loop_invariant_base.\d+\] line 6 Check invariant before entry for loop .*: SUCCESS$
^\[main.loop_invariant_step.\d+\] line 6 Check invariant after step for loop .*: SUCCESS$
^\[main.loop_step_unwinding.\d+\] line 6 Check step was unwound for loop .*: SUCCESS$
^\[main.loop_decreases.\d+\] line 6 Check variant decreases after step for loop .*: FAILURE$
^\[main.assigns.\d+\] line 14 Check that j is assignable: SUCCESS$
^\[main.assigns.\d+\] line 18 Check that i is assignable: SUCCESS$
^\[main.assigns.\d+\] line 19 Check that j is assignable: SUCCESS$
^VERIFICATION FAILED$
^EXIT=10$
^SIGNAL=0$
--
--
This test fails because the given multidimensional decreases clause does not
monotonically decrease. A mistake is in the first component of the
decreases clause: i. It should instead be N - i.
