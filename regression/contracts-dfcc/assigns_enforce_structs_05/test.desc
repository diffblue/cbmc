CORE
main.c
--dfcc main --enforce-contract f1
^EXIT=10$
^SIGNAL=0$
^\[f1_wrapped_for_contract_checking.assigns.\d+\] line \d+ Check that p->y is assignable: FAILURE$
^\[f1_wrapped_for_contract_checking.assigns.\d+\] line \d+ Check that p->x\[\(.*\)0\] is assignable: SUCCESS$
^\[f1_wrapped_for_contract_checking.assigns.\d+\] line \d+ Check that p->x\[\(.*\)1\] is assignable: SUCCESS$
^\[f1_wrapped_for_contract_checking.assigns.\d+\] line \d+ Check that p->x\[\(.*\)2\] is assignable: SUCCESS$
^VERIFICATION FAILED$
--
--
Checks whether CBMC properly evaluates write set of members
from the same object. In this case, we have an assigns clause 
with a struct member `x[3]` and an assignment to the struct member `y`.
CBMC must considers only the region of `x[3]` is assignable.
