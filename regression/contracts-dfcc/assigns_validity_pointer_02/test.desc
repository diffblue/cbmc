CORE
main.c
--dfcc main --enforce-contract foo
^EXIT=0$
^SIGNAL=0$
^\[foo.postcondition.\d+\] line \d+ Check ensures clause( of contract contract::foo for function foo)?: SUCCESS$
^\[bar.assigns.\d+\] line \d+ Check that \*x is assignable: SUCCESS$
^\[bar.assigns.\d+\] line \d+ Check that \*y is assignable: SUCCESS$
^\[baz.assigns.\d+\] line \d+ Check that \*z is assignable: SUCCESS$
^\[foo_wrapped_for_contract_checking.assigns.\d+\] line \d+ Check that \*x is assignable: SUCCESS$
^VERIFICATION SUCCESSFUL$
--
--
This test checks that assigns clause checking
is control-flow sensitive. The assignment to the global *z
in baz is inhibited in the calling context of foo, so it does
not violate the assigns clause of foo.
