CBMC version 5.5 64-bit x86_64 linux
Parsing main.c
Converting
Type-checking main
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
Performing a full slice
Partial Inlining
Generic Property Instrumentation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

main /* main */
        // 0 file main.c line 21 function main
        float return_value___builtin_inff$1;
        // 1 file main.c line 21 function main
        LOCATION
        // 2 file <builtin-library-__builtin_inff> line 2 function __builtin_inff
        __builtin_inff#return_value = 1.000000f / 0.000000f;
        // 3 file <builtin-library-__builtin_inff> line 2 function __builtin_inff
        LOCATION
        // 4 file main.c line 21 function main
        return_value___builtin_inff$1 = __builtin_inff#return_value;
        // 5 file main.c line 21 function main
        dead __builtin_inff#return_value;
        // 6 file main.c line 21 function main
        test(0x800, 3.402823e+38, +return_value___builtin_inff$1);
        // 7 file main.c line 22 function main
        main#return_value = 1;
        // 8 file main.c line 22 function main
        dead return_value___builtin_inff$1;
        // 9 file main.c line 23 function main
        END_FUNCTION
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

_start /* _start */
        // 10 no location
        __CPROVER_initialize();
        // 11 file main.c line 18
        main();
        // 12 file main.c line 18
        dead main#return_value;
        // 13 no location
        END_FUNCTION
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

__CPROVER_initialize /* __CPROVER_initialize */
        // 14 no location
        // Labels: __CPROVER_HIDE
        SKIP
        // 15 file <built-in-additions> line 39
        __CPROVER_dead_object = NULL;
        // 16 file <built-in-additions> line 38
        __CPROVER_deallocated = NULL;
        // 17 file <built-in-additions> line 42
        __CPROVER_malloc_is_new_array = 0 != 0;
        // 18 file <built-in-additions> line 40
        __CPROVER_malloc_object = NULL;
        // 19 file <built-in-additions> line 41
        __CPROVER_malloc_size = 0ul;
        // 20 file <built-in-additions> line 43
        __CPROVER_memory_leak = NULL;
        // 21 file <built-in-additions> line 31
        __CPROVER_next_thread_id = (unsigned long int)0;
        // 22 file <built-in-additions> line 85
        __CPROVER_pipe_count = (unsigned int)0;
        // 23 file <built-in-additions> line 65
        __CPROVER_rounding_mode = 0;
        // 24 file <built-in-additions> line 29
        __CPROVER_thread_id = (unsigned long int)0;
        // 25 file <built-in-additions> line 30
        __CPROVER_threads_exited = ARRAY_OF(FALSE);
        // 26 no location
        END_FUNCTION
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

__builtin_inff /* __builtin_inff */
        // 27 file <builtin-library-__builtin_inff> line 2 function __builtin_inff
        __builtin_inff#return_value = 1.000000f / 0.000000f;
        // 28 file <builtin-library-__builtin_inff> line 2 function __builtin_inff
        END_FUNCTION
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

fesetround /* fesetround */
        // 29 file <builtin-library-fesetround> line 6 function fesetround
        // Labels: __CPROVER_HIDE
        SKIP
        // 30 file <builtin-library-fesetround> line 18 function fesetround
        fesetround#return_value = 0;
        // 31 file <builtin-library-fesetround> line 19 function fesetround
        END_FUNCTION
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

setRoundingModeAndCast /* setRoundingModeAndCast */
        // 32 file main.c line 7 function setRoundingModeAndCast
        LOCATION
        // 33 file main.c line 7 function setRoundingModeAndCast
        signed int rounding_mode;
        // 34 file main.c line 7 function setRoundingModeAndCast
        rounding_mode = mode;
        // 35 file main.c line 7 function setRoundingModeAndCast
        // Labels: __CPROVER_HIDE
        SKIP
        // 36 file main.c line 7 function setRoundingModeAndCast
        fesetround#return_value = 0;
        // 37 file main.c line 7 function setRoundingModeAndCast
        LOCATION
        // 38 file main.c line 7 function setRoundingModeAndCast
        dead rounding_mode;
        // 39 file main.c line 8 function setRoundingModeAndCast
        setRoundingModeAndCast#return_value = (float)d;
        // 40 file main.c line 9 function setRoundingModeAndCast
        END_FUNCTION
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test /* test */
        // 41 file main.c line 12 function test
        float f;
        // 42 file main.c line 12 function test
        setRoundingModeAndCast(mode, d);
        // 43 file main.c line 12 function test
        f = setRoundingModeAndCast#return_value;
        // 44 file main.c line 12 function test
        dead setRoundingModeAndCast#return_value;
        // 45 file main.c line 13 function test
        ASSERT IEEE_FLOAT_EQUAL(f, result) // assertion f == result
        // 46 file main.c line 14 function test
        dead f;
        // 47 file main.c line 15 function test
        END_FUNCTION
