CORE
test.c
--verbosity 10
Passing problem to incremental SMT2 solving via
Sending command to SMT2 solver - \(set-option :produce-models true\)
Sending command to SMT2 solver - \(set-logic QF_UFBV\)
Sending command to SMT2 solver - \(define-fun |B0| \(\) Bool true\)
Sending command to SMT2 solver - \(declare-fun |main::1::x!0@1#1| \(\) \(_ BitVec 32\)\)
Sending command to SMT2 solver - \(define-fun |B1| \(\) Bool \(= |main::1::x!0@1#1| |main::1::x!0@1#1|\)\)
Sending command to SMT2 solver - \(assert \(not \(not \(= |main::1::x!0@1#1| \(_ bv0 32\)\)\)\)\)
Sending command to SMT2 solver - \(define-fun |B2| \(\) Bool \(not false\)\)
Sending command to SMT2 solver - \(assert |B2|\)
Sending command to SMT2 solver - \(check-sat\)
Solver response - sat
^EXIT=10$
^SIGNAL=0$
--
type: pointer
--
Test that running cbmc with the `--incremental-smt2-solver` argument causes the
incremental smt2 solving to be used.

The sliced formula is expected to use only the implemented subset of exprts.
This is implementation is sufficient to send this example to the solver and
receive a "sat" response.
