CORE
main.c
--cover mcdc --cover boundary-values
^EXIT=0$
^SIGNAL=0$
^\[main.coverage.1\] file main.c line 8 function main MC/DC independence condition `x == (unsigned int)3 && y > (unsigned int)5.* SATISFIED$
^\[main.coverage.2\] file main.c line 8 function main MC/DC independence condition `x == (unsigned int)3 && y == (unsigned int)5.* SATISFIED$
^\[main.coverage.3\] file main.c line 8 function main MC/DC independence condition `y < (unsigned int)5 && x > (unsigned int)3.* SATISFIED$
^\[main.coverage.4\] file main.c line 8 function main MC/DC independence condition `y < (unsigned int)5 && x == (unsigned int)3.* SATISFIED$
^\[main.coverage.5\] file main.c line 8 function main MC/DC independence condition `y < (unsigned int)5 && x < (unsigned int)3.* SATISFIED$
^\[main.coverage.6\] file main.c line 8 function main MC/DC independence condition `x < (unsigned int)3 && y > (unsigned int)5.* SATISFIED$
^\[main.coverage.7\] file main.c line 8 function main MC/DC independence condition `x < (unsigned int)3 && y == (unsigned int)5.* SATISFIED$
^\[main.coverage.8\] file main.c line 8 function main decision `!(x > (unsigned int)3) && y < (unsigned int)5.* SATISFIED$
^\[main.coverage.9\] file main.c line 8 function main decision `!(x > (unsigned int)3) && y < (unsigned int)5.* SATISFIED$
^\[main.coverage.10\] file main.c line 8 function main condition `x > (unsigned int)3.* SATISFIED$
^\[main.coverage.11\] file main.c line 8 function main condition `x > (unsigned int)3.* SATISFIED$
^\[main.coverage.12\] file main.c line 8 function main condition `y < (unsigned int)5.* SATISFIED$
^\[main.coverage.13\] file main.c line 8 function main condition `y < (unsigned int)5.* SATISFIED$
^\*\* .* of .* covered (100.0%)$
^\*\* Used 8 iterations$
--
^warning: ignoring
