; SMT 2
; Generated for Z3
(set-info :source "Generated by CBMC 5.4")
(set-option :produce-models true)
; string support via PASS-style quantified arrays
(define-sort cprover.Char () (_ BitVec 8))
(define-sort cprover.Pos () (_ BitVec 32))
(define-sort cprover.String () (Array cprover.Pos cprover.Char))
(declare-fun cprover.str.len (cprover.String) cprover.Pos)

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| () Bool)
; convert
(define-fun |B0| () Bool |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2|)

; convert
(define-fun |B1| () Bool |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2|)

; convert
(define-fun |B2| () Bool |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2|)

; convert
(define-fun |B3| () Bool |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2|)

; convert
(define-fun |B4| () Bool |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2|)

; convert
(define-fun |B5| () Bool |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2|)

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$10!0@1#2| () Bool)
; convert
(define-fun |B6| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$10!0@1#2|))

; convert
(define-fun |B7| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$10!0@1#2|))

; convert
(define-fun |B8| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| (not |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$10!0@1#2|)))

; convert
(define-fun |B9| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| (not |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$10!0@1#2|)))

; convert
(define-fun |B10| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| (not |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$10!0@1#2|)))

; convert
(define-fun |B11| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| (not |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$10!0@1#2|)))

; convert
(define-fun |B12| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| (not |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$10!0@1#2|)))

; convert
(define-fun |B13| () Bool |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2|)

; convert
(define-fun |B14| () Bool |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2|)

; find_symbols
(declare-fun |main::$tmp::tmp_if_expr$13!0@1#5| () Bool)
; convert
(define-fun |B15| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$13!0@1#5|))

; convert
(define-fun |B16| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$13!0@1#5|))

; convert
(define-fun |B17| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| (not |main::$tmp::tmp_if_expr$13!0@1#5|)))

; convert
(define-fun |B18| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| (not |main::$tmp::tmp_if_expr$13!0@1#5|)))

; convert
(define-fun |B19| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| (not |main::$tmp::tmp_if_expr$13!0@1#5|)))

; convert
(define-fun |B20| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| (not |main::$tmp::tmp_if_expr$13!0@1#5|)))

; convert
(define-fun |B21| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| (not |main::$tmp::tmp_if_expr$13!0@1#5|)))

; convert
(define-fun |B22| () Bool |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2|)

; find_symbols
(declare-fun |main::$tmp::tmp_if_expr$16!0@1#5| () Bool)
; convert
(define-fun |B23| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5|))

; convert
(define-fun |B24| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5|))

; convert
(define-fun |B25| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5|))

; convert
(define-fun |B26| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5|))

; convert
(define-fun |B27| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5|))

; convert
(define-fun |B28| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#2| () Bool)
; convert
(define-fun |B29| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#2|))

; convert
(define-fun |B30| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#2|))

; convert
(define-fun |B31| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5| (not |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#2|)))

; convert
(define-fun |B32| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5| (not |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#2|)))

; convert
(define-fun |B33| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5| (not |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#2|)))

; convert
(define-fun |B34| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5| (not |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#2|)))

; convert
(define-fun |B35| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5| (not |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#2|)))

; convert
(define-fun |B36| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5|))

; convert
(define-fun |B37| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5|))

; find_symbols
(declare-fun |main::$tmp::tmp_if_expr$5!0@1#5| () Bool)
; convert
(define-fun |B38| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5| |main::$tmp::tmp_if_expr$5!0@1#5|))

; convert
(define-fun |B39| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5| |main::$tmp::tmp_if_expr$5!0@1#5|))

; convert
(define-fun |B40| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5| (not |main::$tmp::tmp_if_expr$5!0@1#5|)))

; convert
(define-fun |B41| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5| (not |main::$tmp::tmp_if_expr$5!0@1#5|)))

; convert
(define-fun |B42| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5| (not |main::$tmp::tmp_if_expr$5!0@1#5|)))

; convert
(define-fun |B43| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5| (not |main::$tmp::tmp_if_expr$5!0@1#5|)))

; convert
(define-fun |B44| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5| (not |main::$tmp::tmp_if_expr$5!0@1#5|)))

; convert
(define-fun |B45| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5|))

; find_symbols
(declare-fun |main::$tmp::tmp_if_expr$8!0@1#5| () Bool)
; convert
(define-fun |B46| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| |main::$tmp::tmp_if_expr$16!0@1#5| |main::$tmp::tmp_if_expr$8!0@1#5|))

; set_to true (equal)
(define-fun |__CPROVER_dead_object#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_deallocated#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_malloc_is_new_array#1| () Bool false)

; set_to true (equal)
(define-fun |__CPROVER_malloc_object#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_malloc_size#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_memory_leak#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_next_thread_id#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_pipe_count#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_rounding_mode!0#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_thread_id!0#1| () (_ BitVec 32) (_ bv0 32))

; the following is a substitute for lambda i. x
(declare-fun array_of.0 () (Array (_ BitVec 32) Bool))
; set_to true (equal)
(define-fun |__CPROVER_threads_exited#1| () (Array (_ BitVec 32) Bool) array_of.0)

; find_symbols
(declare-fun |main::1::x!0@1#1| () cprover.String)
; find_symbols
(declare-fun |main::1::y!0@1#1| () cprover.String)
; string concatenation
(declare-fun string_concat.1 () cprover.String)
(define-fun string_concat.s0.1 () cprover.String |main::1::x!0@1#1|)
(define-fun string_concat.s1.1 () cprover.String |main::1::y!0@1#1|)
(assert (forall ((?n cprover.Pos)) (=> (bvult ?n (cprover.str.len string_concat.s0.1)) (= (select string_concat.s0.1 ?n) (select string_concat.1 ?n)))))
(assert (forall ((?n cprover.Pos)) (=> (bvult ?n (cprover.str.len string_concat.s1.1)) (= (select string_concat.s1.1 ?n) (select string_concat.1 (bvadd (cprover.str.len string_concat.s0.1) ?n))))))
(assert (= (cprover.str.len string_concat.1) (bvadd (cprover.str.len string_concat.s0.1) (cprover.str.len string_concat.s1.1))))
(assert (bvuge (cprover.str.len string_concat.1) (cprover.str.len string_concat.s0.1)))
(assert (bvuge (cprover.str.len string_concat.1) (cprover.str.len string_concat.s1.1)))

; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_strcat$17!0@1#2| () cprover.String string_concat.1)

; find_symbols
(declare-fun |main::1::z!0@1#1| () cprover.String)
; string equal
(declare-fun string_equal.2 () Bool)
(define-fun string_equal.s1.2 () cprover.String |main::$tmp::return_value___CPROVER_uninterpreted_strcat$17!0@1#2|)
(define-fun string_equal.s2.2 () cprover.String |main::1::z!0@1#1|)
(declare-fun string_equal.idx.2 () cprover.Pos)
(assert (=> string_equal.2 (= (cprover.str.len string_equal.s1.2) (cprover.str.len string_equal.s2.2))))
(assert (forall ((?n cprover.Pos)) (=> (and string_equal.2 (bvult ?n (cprover.str.len string_equal.s1.2))) (= (select string_equal.s1.2 ?n) (select string_equal.s2.2 ?n)))))
(assert (=> (not string_equal.2) (or (not (= (cprover.str.len string_equal.s1.2) (cprover.str.len string_equal.s2.2)))
(and (bvult string_equal.idx.2 (cprover.str.len string_equal.s1.2)) (not (= (select string_equal.s1.2 string_equal.idx.2) (select string_equal.s2.2 string_equal.idx.2)))))))

; set_to true
(assert (= |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2| string_equal.2))

(declare-fun string.3 () cprover.String)
(assert (= (select string.3 (_ bv0 32)) (_ bv97 8)))
(assert (= (select string.3 (_ bv1 32)) (_ bv98 8)))
(assert (= (select string.3 (_ bv2 32)) (_ bv99 8)))
(assert (= (select string.3 (_ bv3 32)) (_ bv100 8)))
(assert (= (select string.3 (_ bv4 32)) (_ bv101 8)))
(assert (= (select string.3 (_ bv5 32)) (_ bv102 8)))
(assert (= (cprover.str.len string.3) (_ bv6 32)))
; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$9!0@1#2| () cprover.String string.3)

; string equal
(declare-fun string_equal.4 () Bool)
(define-fun string_equal.s1.4 () cprover.String |main::1::z!0@1#1|)
(define-fun string_equal.s2.4 () cprover.String |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$9!0@1#2|)
(declare-fun string_equal.idx.4 () cprover.Pos)
(assert (=> string_equal.4 (= (cprover.str.len string_equal.s1.4) (cprover.str.len string_equal.s2.4))))
(assert (forall ((?n cprover.Pos)) (=> (and string_equal.4 (bvult ?n (cprover.str.len string_equal.s1.4))) (= (select string_equal.s1.4 ?n) (select string_equal.s2.4 ?n)))))
(assert (=> (not string_equal.4) (or (not (= (cprover.str.len string_equal.s1.4) (cprover.str.len string_equal.s2.4)))
(and (bvult string_equal.idx.4 (cprover.str.len string_equal.s1.4)) (not (= (select string_equal.s1.4 string_equal.idx.4) (select string_equal.s2.4 string_equal.idx.4)))))))

; set_to true
(assert (= |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$10!0@1#2| string_equal.4))

; set_to true (equal)
(define-fun |main::$tmp::tmp_if_expr$13!0@1#2| () Bool true)

; find_symbols
(declare-fun |main::$tmp::tmp_if_expr$13!0@1#1| () Bool)
; set_to true (equal)
(define-fun |main::$tmp::tmp_if_expr$13!0@1#3| () Bool |main::$tmp::tmp_if_expr$13!0@1#1|)

(declare-fun string.5 () cprover.String)
(assert (= (select string.5 (_ bv0 32)) (_ bv97 8)))
(assert (= (select string.5 (_ bv1 32)) (_ bv97 8)))
(assert (= (select string.5 (_ bv2 32)) (_ bv97 8)))
(assert (= (select string.5 (_ bv3 32)) (_ bv97 8)))
(assert (= (cprover.str.len string.5) (_ bv4 32)))
; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$11!0@1#2| () cprover.String string.5)

; string equal
(declare-fun string_equal.6 () Bool)
(define-fun string_equal.s1.6 () cprover.String |main::1::z!0@1#1|)
(define-fun string_equal.s2.6 () cprover.String |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$11!0@1#2|)
(declare-fun string_equal.idx.6 () cprover.Pos)
(assert (=> string_equal.6 (= (cprover.str.len string_equal.s1.6) (cprover.str.len string_equal.s2.6))))
(assert (forall ((?n cprover.Pos)) (=> (and string_equal.6 (bvult ?n (cprover.str.len string_equal.s1.6))) (= (select string_equal.s1.6 ?n) (select string_equal.s2.6 ?n)))))
(assert (=> (not string_equal.6) (or (not (= (cprover.str.len string_equal.s1.6) (cprover.str.len string_equal.s2.6)))
(and (bvult string_equal.idx.6 (cprover.str.len string_equal.s1.6)) (not (= (select string_equal.s1.6 string_equal.idx.6) (select string_equal.s2.6 string_equal.idx.6)))))))

; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$12!0@1#2| () Bool string_equal.6)

; set_to true (equal)
(define-fun |main::$tmp::tmp_if_expr$13!0@1#4| () Bool |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$12!0@1#2|)

; set_to true
(assert (= |main::$tmp::tmp_if_expr$13!0@1#5| (or |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$10!0@1#2| |main::$tmp::tmp_if_expr$13!0@1#4|)))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$12!0@1#0| () Bool)
; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$12!0@1#3| () Bool (ite |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$10!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$12!0@1#0| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$12!0@1#2|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$11!0@1#0| () cprover.String)
; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$11!0@1#3| () cprover.String (ite |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$10!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$11!0@1#0| |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$11!0@1#2|))

; set_to true (equal)
(define-fun |main::$tmp::tmp_if_expr$16!0@1#2| () Bool true)

; find_symbols
(declare-fun |main::$tmp::tmp_if_expr$16!0@1#1| () Bool)
; set_to true (equal)
(define-fun |main::$tmp::tmp_if_expr$16!0@1#3| () Bool |main::$tmp::tmp_if_expr$16!0@1#1|)

(declare-fun string.7 () cprover.String)
(assert (= (select string.7 (_ bv0 32)) (_ bv98 8)))
(assert (= (select string.7 (_ bv1 32)) (_ bv98 8)))
(assert (= (select string.7 (_ bv2 32)) (_ bv98 8)))
(assert (= (select string.7 (_ bv3 32)) (_ bv98 8)))
(assert (= (cprover.str.len string.7) (_ bv4 32)))
; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$14!0@1#2| () cprover.String string.7)

; string equal
(declare-fun string_equal.8 () Bool)
(define-fun string_equal.s1.8 () cprover.String |main::1::z!0@1#1|)
(define-fun string_equal.s2.8 () cprover.String |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$14!0@1#2|)
(declare-fun string_equal.idx.8 () cprover.Pos)
(assert (=> string_equal.8 (= (cprover.str.len string_equal.s1.8) (cprover.str.len string_equal.s2.8))))
(assert (forall ((?n cprover.Pos)) (=> (and string_equal.8 (bvult ?n (cprover.str.len string_equal.s1.8))) (= (select string_equal.s1.8 ?n) (select string_equal.s2.8 ?n)))))
(assert (=> (not string_equal.8) (or (not (= (cprover.str.len string_equal.s1.8) (cprover.str.len string_equal.s2.8)))
(and (bvult string_equal.idx.8 (cprover.str.len string_equal.s1.8)) (not (= (select string_equal.s1.8 string_equal.idx.8) (select string_equal.s2.8 string_equal.idx.8)))))))

; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$15!0@1#2| () Bool string_equal.8)

; set_to true (equal)
(define-fun |main::$tmp::tmp_if_expr$16!0@1#4| () Bool |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$15!0@1#2|)

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$15!0@1#0| () Bool)
; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$15!0@1#3| () Bool (ite |main::$tmp::tmp_if_expr$13!0@1#5| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$15!0@1#0| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$15!0@1#2|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$14!0@1#0| () cprover.String)
; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$14!0@1#3| () cprover.String (ite |main::$tmp::tmp_if_expr$13!0@1#5| |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$14!0@1#0| |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$14!0@1#2|))

; set_to true
(assert (= |main::$tmp::tmp_if_expr$16!0@1#5| (or |main::$tmp::tmp_if_expr$13!0@1#5| |main::$tmp::tmp_if_expr$16!0@1#4|)))

(declare-fun string.9 () cprover.String)
(assert (= (select string.9 (_ bv0 32)) (_ bv101 8)))
(assert (= (cprover.str.len string.9) (_ bv1 32)))
; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$1!0@1#2| () cprover.String string.9)

; string equal
(declare-fun string_equal.10 () Bool)
(define-fun string_equal.s1.10 () cprover.String |main::1::x!0@1#1|)
(define-fun string_equal.s2.10 () cprover.String |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$1!0@1#2|)
(declare-fun string_equal.idx.10 () cprover.Pos)
(assert (=> string_equal.10 (= (cprover.str.len string_equal.s1.10) (cprover.str.len string_equal.s2.10))))
(assert (forall ((?n cprover.Pos)) (=> (and string_equal.10 (bvult ?n (cprover.str.len string_equal.s1.10))) (= (select string_equal.s1.10 ?n) (select string_equal.s2.10 ?n)))))
(assert (=> (not string_equal.10) (or (not (= (cprover.str.len string_equal.s1.10) (cprover.str.len string_equal.s2.10)))
(and (bvult string_equal.idx.10 (cprover.str.len string_equal.s1.10)) (not (= (select string_equal.s1.10 string_equal.idx.10) (select string_equal.s2.10 string_equal.idx.10)))))))

; set_to true
(assert (= |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#2| string_equal.10))

; set_to true (equal)
(define-fun |main::$tmp::tmp_if_expr$5!0@1#2| () Bool true)

; find_symbols
(declare-fun |main::$tmp::tmp_if_expr$5!0@1#1| () Bool)
; set_to true (equal)
(define-fun |main::$tmp::tmp_if_expr$5!0@1#3| () Bool |main::$tmp::tmp_if_expr$5!0@1#1|)

(declare-fun string.11 () cprover.String)
(assert (= (select string.11 (_ bv0 32)) (_ bv102 8)))
(assert (= (cprover.str.len string.11) (_ bv1 32)))
; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$3!0@1#2| () cprover.String string.11)

; string equal
(declare-fun string_equal.12 () Bool)
(define-fun string_equal.s1.12 () cprover.String |main::1::x!0@1#1|)
(define-fun string_equal.s2.12 () cprover.String |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$3!0@1#2|)
(declare-fun string_equal.idx.12 () cprover.Pos)
(assert (=> string_equal.12 (= (cprover.str.len string_equal.s1.12) (cprover.str.len string_equal.s2.12))))
(assert (forall ((?n cprover.Pos)) (=> (and string_equal.12 (bvult ?n (cprover.str.len string_equal.s1.12))) (= (select string_equal.s1.12 ?n) (select string_equal.s2.12 ?n)))))
(assert (=> (not string_equal.12) (or (not (= (cprover.str.len string_equal.s1.12) (cprover.str.len string_equal.s2.12)))
(and (bvult string_equal.idx.12 (cprover.str.len string_equal.s1.12)) (not (= (select string_equal.s1.12 string_equal.idx.12) (select string_equal.s2.12 string_equal.idx.12)))))))

; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$4!0@1#2| () Bool string_equal.12)

; set_to true (equal)
(define-fun |main::$tmp::tmp_if_expr$5!0@1#4| () Bool |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$4!0@1#2|)

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$4!0@1#0| () Bool)
; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$4!0@1#3| () Bool (ite |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$4!0@1#0| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$4!0@1#2|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$3!0@1#0| () cprover.String)
; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$3!0@1#3| () cprover.String (ite |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$3!0@1#0| |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$3!0@1#2|))

; set_to true
(assert (= |main::$tmp::tmp_if_expr$5!0@1#5| (or |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#2| |main::$tmp::tmp_if_expr$5!0@1#4|)))

; set_to true (equal)
(define-fun |main::$tmp::tmp_if_expr$8!0@1#2| () Bool true)

; find_symbols
(declare-fun |main::$tmp::tmp_if_expr$8!0@1#1| () Bool)
; set_to true (equal)
(define-fun |main::$tmp::tmp_if_expr$8!0@1#3| () Bool |main::$tmp::tmp_if_expr$8!0@1#1|)

(declare-fun string.13 () cprover.String)
(assert (= (select string.13 (_ bv0 32)) (_ bv97 8)))
(assert (= (select string.13 (_ bv1 32)) (_ bv98 8)))
(assert (= (select string.13 (_ bv2 32)) (_ bv99 8)))
(assert (= (select string.13 (_ bv3 32)) (_ bv100 8)))
(assert (= (select string.13 (_ bv4 32)) (_ bv101 8)))
(assert (= (cprover.str.len string.13) (_ bv5 32)))
; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$6!0@1#2| () cprover.String string.13)

; string equal
(declare-fun string_equal.14 () Bool)
(define-fun string_equal.s1.14 () cprover.String |main::1::x!0@1#1|)
(define-fun string_equal.s2.14 () cprover.String |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$6!0@1#2|)
(declare-fun string_equal.idx.14 () cprover.Pos)
(assert (=> string_equal.14 (= (cprover.str.len string_equal.s1.14) (cprover.str.len string_equal.s2.14))))
(assert (forall ((?n cprover.Pos)) (=> (and string_equal.14 (bvult ?n (cprover.str.len string_equal.s1.14))) (= (select string_equal.s1.14 ?n) (select string_equal.s2.14 ?n)))))
(assert (=> (not string_equal.14) (or (not (= (cprover.str.len string_equal.s1.14) (cprover.str.len string_equal.s2.14)))
(and (bvult string_equal.idx.14 (cprover.str.len string_equal.s1.14)) (not (= (select string_equal.s1.14 string_equal.idx.14) (select string_equal.s2.14 string_equal.idx.14)))))))

; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$7!0@1#2| () Bool string_equal.14)

; set_to true (equal)
(define-fun |main::$tmp::tmp_if_expr$8!0@1#4| () Bool |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$7!0@1#2|)

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$7!0@1#0| () Bool)
; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$7!0@1#3| () Bool (ite |main::$tmp::tmp_if_expr$5!0@1#5| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$7!0@1#0| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$7!0@1#2|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$6!0@1#0| () cprover.String)
; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$6!0@1#3| () cprover.String (ite |main::$tmp::tmp_if_expr$5!0@1#5| |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$6!0@1#0| |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$6!0@1#2|))

; set_to true
(assert (= |main::$tmp::tmp_if_expr$8!0@1#5| (or |main::$tmp::tmp_if_expr$5!0@1#5| |main::$tmp::tmp_if_expr$8!0@1#4|)))

; convert
(define-fun |B47| () Bool (= |main::1::x!0@1#1| |main::1::x!0@1#1|))

; convert
(define-fun |B48| () Bool (= |main::1::y!0@1#1| |main::1::y!0@1#1|))

; convert
(define-fun |B49| () Bool (= |main::1::z!0@1#1| |main::1::z!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_strcat$17!0@1#1| () cprover.String)
; convert
(define-fun |B50| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_strcat$17!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_strcat$17!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#1| () Bool)
; convert
(define-fun |B51| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$9!0@1#1| () cprover.String)
; convert
(define-fun |B52| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$9!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$9!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$10!0@1#1| () Bool)
; convert
(define-fun |B53| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$10!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$10!0@1#1|))

; convert
(define-fun |B54| () Bool (= |main::$tmp::tmp_if_expr$13!0@1#1| |main::$tmp::tmp_if_expr$13!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$11!0@1#1| () cprover.String)
; convert
(define-fun |B55| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$11!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$11!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$12!0@1#1| () Bool)
; convert
(define-fun |B56| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$12!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$12!0@1#1|))

; convert
(define-fun |B57| () Bool (= |main::$tmp::tmp_if_expr$16!0@1#1| |main::$tmp::tmp_if_expr$16!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$14!0@1#1| () cprover.String)
; convert
(define-fun |B58| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$14!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$14!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$15!0@1#1| () Bool)
; convert
(define-fun |B59| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$15!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$15!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$1!0@1#1| () cprover.String)
; convert
(define-fun |B60| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$1!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$1!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#1| () Bool)
; convert
(define-fun |B61| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#1|))

; convert
(define-fun |B62| () Bool (= |main::$tmp::tmp_if_expr$5!0@1#1| |main::$tmp::tmp_if_expr$5!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$3!0@1#1| () cprover.String)
; convert
(define-fun |B63| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$3!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$3!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$4!0@1#1| () Bool)
; convert
(define-fun |B64| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$4!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$4!0@1#1|))

; convert
(define-fun |B65| () Bool (= |main::$tmp::tmp_if_expr$8!0@1#1| |main::$tmp::tmp_if_expr$8!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$6!0@1#1| () cprover.String)
; convert
(define-fun |B66| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$6!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$6!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$7!0@1#1| () Bool)
; convert
(define-fun |B67| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$7!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$7!0@1#1|))

; set_to true
(assert |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2|)

; set_to true
(assert |main::$tmp::tmp_if_expr$16!0@1#5|)

; set_to true
(assert |main::$tmp::tmp_if_expr$8!0@1#5|)

; convert
(define-fun |B68| () Bool (not |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2|))

; convert
(define-fun |B69| () Bool (not |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$10!0@1#2|))

; convert
(define-fun |B70| () Bool (not |main::$tmp::tmp_if_expr$13!0@1#5|))

; convert
(define-fun |B71| () Bool (not |main::$tmp::tmp_if_expr$16!0@1#5|))

; convert
(define-fun |B72| () Bool (not |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#2|))

; convert
(define-fun |B73| () Bool (not |main::$tmp::tmp_if_expr$5!0@1#5|))

; convert
(define-fun |B74| () Bool (not |main::$tmp::tmp_if_expr$8!0@1#5|))

(check-sat)

(get-value (|B0|))
(get-value (|B1|))
(get-value (|B10|))
(get-value (|B11|))
(get-value (|B12|))
(get-value (|B13|))
(get-value (|B14|))
(get-value (|B15|))
(get-value (|B16|))
(get-value (|B17|))
(get-value (|B18|))
(get-value (|B19|))
(get-value (|B2|))
(get-value (|B20|))
(get-value (|B21|))
(get-value (|B22|))
(get-value (|B23|))
(get-value (|B24|))
(get-value (|B25|))
(get-value (|B26|))
(get-value (|B27|))
(get-value (|B28|))
(get-value (|B29|))
(get-value (|B3|))
(get-value (|B30|))
(get-value (|B31|))
(get-value (|B32|))
(get-value (|B33|))
(get-value (|B34|))
(get-value (|B35|))
(get-value (|B36|))
(get-value (|B37|))
(get-value (|B38|))
(get-value (|B39|))
(get-value (|B4|))
(get-value (|B40|))
(get-value (|B41|))
(get-value (|B42|))
(get-value (|B43|))
(get-value (|B44|))
(get-value (|B45|))
(get-value (|B46|))
(get-value (|B47|))
(get-value (|B48|))
(get-value (|B49|))
(get-value (|B5|))
(get-value (|B50|))
(get-value (|B51|))
(get-value (|B52|))
(get-value (|B53|))
(get-value (|B54|))
(get-value (|B55|))
(get-value (|B56|))
(get-value (|B57|))
(get-value (|B58|))
(get-value (|B59|))
(get-value (|B6|))
(get-value (|B60|))
(get-value (|B61|))
(get-value (|B62|))
(get-value (|B63|))
(get-value (|B64|))
(get-value (|B65|))
(get-value (|B66|))
(get-value (|B67|))
(get-value (|B68|))
(get-value (|B69|))
(get-value (|B7|))
(get-value (|B70|))
(get-value (|B71|))
(get-value (|B72|))
(get-value (|B73|))
(get-value (|B74|))
(get-value (|B8|))
(get-value (|B9|))
(get-value (|__CPROVER_dead_object#1|))
(get-value (|__CPROVER_deallocated#1|))
(get-value (|__CPROVER_malloc_is_new_array#1|))
(get-value (|__CPROVER_malloc_object#1|))
(get-value (|__CPROVER_malloc_size#1|))
(get-value (|__CPROVER_memory_leak#1|))
(get-value (|__CPROVER_next_thread_id#1|))
(get-value (|__CPROVER_pipe_count#1|))
(get-value (|__CPROVER_rounding_mode!0#1|))
(get-value (|__CPROVER_thread_id!0#1|))
(get-value (|__CPROVER_threads_exited#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_strcat$17!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_strcat$17!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$10!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$10!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$12!0@1#0|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$12!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$12!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$12!0@1#3|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$15!0@1#0|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$15!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$15!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$15!0@1#3|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$18!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$4!0@1#0|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$4!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$4!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$4!0@1#3|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$7!0@1#0|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$7!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$7!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$7!0@1#3|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$1!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$1!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$11!0@1#0|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$11!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$11!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$11!0@1#3|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$14!0@1#0|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$14!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$14!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$14!0@1#3|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$3!0@1#0|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$3!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$3!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$3!0@1#3|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$6!0@1#0|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$6!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$6!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$6!0@1#3|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$9!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$9!0@1#2|))
(get-value (|main::$tmp::tmp_if_expr$13!0@1#1|))
(get-value (|main::$tmp::tmp_if_expr$13!0@1#2|))
(get-value (|main::$tmp::tmp_if_expr$13!0@1#3|))
(get-value (|main::$tmp::tmp_if_expr$13!0@1#4|))
(get-value (|main::$tmp::tmp_if_expr$13!0@1#5|))
(get-value (|main::$tmp::tmp_if_expr$16!0@1#1|))
(get-value (|main::$tmp::tmp_if_expr$16!0@1#2|))
(get-value (|main::$tmp::tmp_if_expr$16!0@1#3|))
(get-value (|main::$tmp::tmp_if_expr$16!0@1#4|))
(get-value (|main::$tmp::tmp_if_expr$16!0@1#5|))
(get-value (|main::$tmp::tmp_if_expr$5!0@1#1|))
(get-value (|main::$tmp::tmp_if_expr$5!0@1#2|))
(get-value (|main::$tmp::tmp_if_expr$5!0@1#3|))
(get-value (|main::$tmp::tmp_if_expr$5!0@1#4|))
(get-value (|main::$tmp::tmp_if_expr$5!0@1#5|))
(get-value (|main::$tmp::tmp_if_expr$8!0@1#1|))
(get-value (|main::$tmp::tmp_if_expr$8!0@1#2|))
(get-value (|main::$tmp::tmp_if_expr$8!0@1#3|))
(get-value (|main::$tmp::tmp_if_expr$8!0@1#4|))
(get-value (|main::$tmp::tmp_if_expr$8!0@1#5|))
(get-value (|main::1::x!0@1#1|))
(get-value (|main::1::y!0@1#1|))
(get-value (|main::1::z!0@1#1|))

(exit)
; end of SMT2 file
