; SMT 2
; Generated for Z3
(set-info :source "Generated by CBMC 5.4")
(set-option :produce-models true)
; string support via PASS-style quantified arrays
(define-sort cprover.Char () (_ BitVec 8))
(define-sort cprover.Pos () (_ BitVec 32))
(define-sort cprover.String () (Array cprover.Pos cprover.Char))
(declare-fun cprover.str.len (cprover.String) cprover.Pos)

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| () Bool)
; convert
(define-fun |B0| () Bool |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2|)

; convert
(define-fun |B1| () Bool |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2|)

; convert
(define-fun |B2| () Bool |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2|)

; convert
(define-fun |B3| () Bool |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2|)

; convert
(define-fun |B4| () Bool |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2|)

; convert
(define-fun |B5| () Bool |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2|)

; convert
(define-fun |B6| () Bool |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2|)

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2| () Bool)
; convert
(define-fun |B7| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2|))

; convert
(define-fun |B8| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2|))

; convert
(define-fun |B9| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2|))

; convert
(define-fun |B10| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2|))

; convert
(define-fun |B11| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2|))

; convert
(define-fun |B12| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2|))

; convert
(define-fun |B13| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#2| () Bool)
; convert
(define-fun |B14| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#2|))

; convert
(define-fun |B15| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#2|))

; convert
(define-fun |B16| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#2|))

; convert
(define-fun |B17| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#2|))

; convert
(define-fun |B18| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#2|))

; convert
(define-fun |B19| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#2|))

; convert
(define-fun |B20| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#2|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$5!0@1#2| () Bool)
; convert
(define-fun |B21| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$5!0@1#2|))

; convert
(define-fun |B22| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$5!0@1#2|))

; convert
(define-fun |B23| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$5!0@1#2|))

; convert
(define-fun |B24| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$5!0@1#2|))

; convert
(define-fun |B25| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$5!0@1#2|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#2| () Bool)
; convert
(define-fun |B26| () Bool (and |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$5!0@1#2| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#2|))

; set_to true (equal)
(define-fun |__CPROVER_dead_object#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_deallocated#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_malloc_is_new_array#1| () Bool false)

; set_to true (equal)
(define-fun |__CPROVER_malloc_object#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_malloc_size#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_memory_leak#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_next_thread_id#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_pipe_count#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_rounding_mode!0#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_thread_id!0#1| () (_ BitVec 32) (_ bv0 32))

; the following is a substitute for lambda i. x
(declare-fun array_of.0 () (Array (_ BitVec 32) Bool))
; set_to true (equal)
(define-fun |__CPROVER_threads_exited#1| () (Array (_ BitVec 32) Bool) array_of.0)

(declare-fun string.1 () cprover.String)
(assert (= (select string.1 (_ bv0 32)) (_ bv103 8)))
(assert (= (select string.1 (_ bv1 32)) (_ bv107 8)))
(assert (= (select string.1 (_ bv2 32)) (_ bv104 8)))
(assert (= (select string.1 (_ bv3 32)) (_ bv105 8)))
(assert (= (cprover.str.len string.1) (_ bv4 32)))
; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$12!0@1#2| () cprover.String string.1)

; find_symbols
(declare-fun |main::1::x!0@1#1| () cprover.String)
; string concatenation
(declare-fun string_concat.2 () cprover.String)
(define-fun string_concat.s0.2 () cprover.String |main::1::x!0@1#1|)
(define-fun string_concat.s1.2 () cprover.String |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$12!0@1#2|)
(assert (forall ((?n cprover.Pos)) (=> (bvult ?n (cprover.str.len string_concat.s0.2)) (= (select string_concat.s0.2 ?n) (select string_concat.2 ?n)))))
(assert (forall ((?n cprover.Pos)) (=> (bvult ?n (cprover.str.len string_concat.s1.2)) (= (select string_concat.s1.2 ?n) (select string_concat.2 (bvadd (cprover.str.len string_concat.s0.2) ?n))))))
(assert (= (cprover.str.len string_concat.2) (bvadd (cprover.str.len string_concat.s0.2) (cprover.str.len string_concat.s1.2))))
(assert (bvuge (cprover.str.len string_concat.2) (cprover.str.len string_concat.s0.2)))
(assert (bvuge (cprover.str.len string_concat.2) (cprover.str.len string_concat.s1.2)))

; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_strcat$13!0@1#2| () cprover.String string_concat.2)

; find_symbols
(declare-fun |main::1::z!0@1#1| () cprover.String)
; string equal
(declare-fun string_equal.3 () Bool)
(define-fun string_equal.s1.3 () cprover.String |main::1::z!0@1#1|)
(define-fun string_equal.s2.3 () cprover.String |main::$tmp::return_value___CPROVER_uninterpreted_strcat$13!0@1#2|)
(declare-fun string_equal.idx.3 () cprover.Pos)
(assert (=> string_equal.3 (= (cprover.str.len string_equal.s1.3) (cprover.str.len string_equal.s2.3))))
(assert (forall ((?n cprover.Pos)) (=> (and string_equal.3 (bvult ?n (cprover.str.len string_equal.s1.3))) (= (select string_equal.s1.3 ?n) (select string_equal.s2.3 ?n)))))
(assert (=> (not string_equal.3) (or (not (= (cprover.str.len string_equal.s1.3) (cprover.str.len string_equal.s2.3)))
(and (bvult string_equal.idx.3 (cprover.str.len string_equal.s1.3)) (not (= (select string_equal.s1.3 string_equal.idx.3) (select string_equal.s2.3 string_equal.idx.3)))))))

; set_to true
(assert (= |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2| string_equal.3))

(declare-fun string.4 () cprover.String)
(assert (= (select string.4 (_ bv0 32)) (_ bv104 8)))
(assert (= (select string.4 (_ bv1 32)) (_ bv105 8)))
(assert (= (cprover.str.len string.4) (_ bv2 32)))
; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$9!0@1#2| () cprover.String string.4)

; find_symbols
(declare-fun |main::1::y!0@1#1| () cprover.String)
; string concatenation
(declare-fun string_concat.5 () cprover.String)
(define-fun string_concat.s0.5 () cprover.String |main::1::y!0@1#1|)
(define-fun string_concat.s1.5 () cprover.String |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$9!0@1#2|)
(assert (forall ((?n cprover.Pos)) (=> (bvult ?n (cprover.str.len string_concat.s0.5)) (= (select string_concat.s0.5 ?n) (select string_concat.5 ?n)))))
(assert (forall ((?n cprover.Pos)) (=> (bvult ?n (cprover.str.len string_concat.s1.5)) (= (select string_concat.s1.5 ?n) (select string_concat.5 (bvadd (cprover.str.len string_concat.s0.5) ?n))))))
(assert (= (cprover.str.len string_concat.5) (bvadd (cprover.str.len string_concat.s0.5) (cprover.str.len string_concat.s1.5))))
(assert (bvuge (cprover.str.len string_concat.5) (cprover.str.len string_concat.s0.5)))
(assert (bvuge (cprover.str.len string_concat.5) (cprover.str.len string_concat.s1.5)))

; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_strcat$10!0@1#2| () cprover.String string_concat.5)

; string equal
(declare-fun string_equal.6 () Bool)
(define-fun string_equal.s1.6 () cprover.String |main::1::z!0@1#1|)
(define-fun string_equal.s2.6 () cprover.String |main::$tmp::return_value___CPROVER_uninterpreted_strcat$10!0@1#2|)
(declare-fun string_equal.idx.6 () cprover.Pos)
(assert (=> string_equal.6 (= (cprover.str.len string_equal.s1.6) (cprover.str.len string_equal.s2.6))))
(assert (forall ((?n cprover.Pos)) (=> (and string_equal.6 (bvult ?n (cprover.str.len string_equal.s1.6))) (= (select string_equal.s1.6 ?n) (select string_equal.s2.6 ?n)))))
(assert (=> (not string_equal.6) (or (not (= (cprover.str.len string_equal.s1.6) (cprover.str.len string_equal.s2.6)))
(and (bvult string_equal.idx.6 (cprover.str.len string_equal.s1.6)) (not (= (select string_equal.s1.6 string_equal.idx.6) (select string_equal.s2.6 string_equal.idx.6)))))))

; set_to true
(assert (= |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2| string_equal.6))

(declare-fun string.7 () cprover.String)
(assert (= (select string.7 (_ bv0 32)) (_ bv97 8)))
(assert (= (select string.7 (_ bv1 32)) (_ bv98 8)))
(assert (= (select string.7 (_ bv2 32)) (_ bv99 8)))
(assert (= (select string.7 (_ bv3 32)) (_ bv100 8)))
(assert (= (cprover.str.len string.7) (_ bv4 32)))
; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$6!0@1#2| () cprover.String string.7)

; find_symbols
(declare-fun |main::1::m!0@1#1| () cprover.String)
; string concatenation
(declare-fun string_concat.8 () cprover.String)
(define-fun string_concat.s0.8 () cprover.String |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$6!0@1#2|)
(define-fun string_concat.s1.8 () cprover.String |main::1::m!0@1#1|)
(assert (forall ((?n cprover.Pos)) (=> (bvult ?n (cprover.str.len string_concat.s0.8)) (= (select string_concat.s0.8 ?n) (select string_concat.8 ?n)))))
(assert (forall ((?n cprover.Pos)) (=> (bvult ?n (cprover.str.len string_concat.s1.8)) (= (select string_concat.s1.8 ?n) (select string_concat.8 (bvadd (cprover.str.len string_concat.s0.8) ?n))))))
(assert (= (cprover.str.len string_concat.8) (bvadd (cprover.str.len string_concat.s0.8) (cprover.str.len string_concat.s1.8))))
(assert (bvuge (cprover.str.len string_concat.8) (cprover.str.len string_concat.s0.8)))
(assert (bvuge (cprover.str.len string_concat.8) (cprover.str.len string_concat.s1.8)))

; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_strcat$7!0@1#2| () cprover.String string_concat.8)

; string equal
(declare-fun string_equal.9 () Bool)
(define-fun string_equal.s1.9 () cprover.String |main::1::z!0@1#1|)
(define-fun string_equal.s2.9 () cprover.String |main::$tmp::return_value___CPROVER_uninterpreted_strcat$7!0@1#2|)
(declare-fun string_equal.idx.9 () cprover.Pos)
(assert (=> string_equal.9 (= (cprover.str.len string_equal.s1.9) (cprover.str.len string_equal.s2.9))))
(assert (forall ((?n cprover.Pos)) (=> (and string_equal.9 (bvult ?n (cprover.str.len string_equal.s1.9))) (= (select string_equal.s1.9 ?n) (select string_equal.s2.9 ?n)))))
(assert (=> (not string_equal.9) (or (not (= (cprover.str.len string_equal.s1.9) (cprover.str.len string_equal.s2.9)))
(and (bvult string_equal.idx.9 (cprover.str.len string_equal.s1.9)) (not (= (select string_equal.s1.9 string_equal.idx.9) (select string_equal.s2.9 string_equal.idx.9)))))))

; set_to true
(assert (= |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#2| string_equal.9))

(declare-fun string.10 () cprover.String)
(assert (= (select string.10 (_ bv0 32)) (_ bv97 8)))
(assert (= (select string.10 (_ bv1 32)) (_ bv98 8)))
(assert (= (cprover.str.len string.10) (_ bv2 32)))
; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$3!0@1#2| () cprover.String string.10)

; find_symbols
(declare-fun |main::1::k!0@1#1| () cprover.String)
; string concatenation
(declare-fun string_concat.11 () cprover.String)
(define-fun string_concat.s0.11 () cprover.String |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$3!0@1#2|)
(define-fun string_concat.s1.11 () cprover.String |main::1::k!0@1#1|)
(assert (forall ((?n cprover.Pos)) (=> (bvult ?n (cprover.str.len string_concat.s0.11)) (= (select string_concat.s0.11 ?n) (select string_concat.11 ?n)))))
(assert (forall ((?n cprover.Pos)) (=> (bvult ?n (cprover.str.len string_concat.s1.11)) (= (select string_concat.s1.11 ?n) (select string_concat.11 (bvadd (cprover.str.len string_concat.s0.11) ?n))))))
(assert (= (cprover.str.len string_concat.11) (bvadd (cprover.str.len string_concat.s0.11) (cprover.str.len string_concat.s1.11))))
(assert (bvuge (cprover.str.len string_concat.11) (cprover.str.len string_concat.s0.11)))
(assert (bvuge (cprover.str.len string_concat.11) (cprover.str.len string_concat.s1.11)))

; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_strcat$4!0@1#2| () cprover.String string_concat.11)

; string equal
(declare-fun string_equal.12 () Bool)
(define-fun string_equal.s1.12 () cprover.String |main::1::z!0@1#1|)
(define-fun string_equal.s2.12 () cprover.String |main::$tmp::return_value___CPROVER_uninterpreted_strcat$4!0@1#2|)
(declare-fun string_equal.idx.12 () cprover.Pos)
(assert (=> string_equal.12 (= (cprover.str.len string_equal.s1.12) (cprover.str.len string_equal.s2.12))))
(assert (forall ((?n cprover.Pos)) (=> (and string_equal.12 (bvult ?n (cprover.str.len string_equal.s1.12))) (= (select string_equal.s1.12 ?n) (select string_equal.s2.12 ?n)))))
(assert (=> (not string_equal.12) (or (not (= (cprover.str.len string_equal.s1.12) (cprover.str.len string_equal.s2.12)))
(and (bvult string_equal.idx.12 (cprover.str.len string_equal.s1.12)) (not (= (select string_equal.s1.12 string_equal.idx.12) (select string_equal.s2.12 string_equal.idx.12)))))))

; set_to true
(assert (= |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$5!0@1#2| string_equal.12))

; find_symbols
(declare-fun |main::1::n1!0@1#1| () cprover.String)
; find_symbols
(declare-fun |main::1::n2!0@1#1| () cprover.String)
; string concatenation
(declare-fun string_concat.13 () cprover.String)
(define-fun string_concat.s0.13 () cprover.String |main::1::n1!0@1#1|)
(define-fun string_concat.s1.13 () cprover.String |main::1::n2!0@1#1|)
(assert (forall ((?n cprover.Pos)) (=> (bvult ?n (cprover.str.len string_concat.s0.13)) (= (select string_concat.s0.13 ?n) (select string_concat.13 ?n)))))
(assert (forall ((?n cprover.Pos)) (=> (bvult ?n (cprover.str.len string_concat.s1.13)) (= (select string_concat.s1.13 ?n) (select string_concat.13 (bvadd (cprover.str.len string_concat.s0.13) ?n))))))
(assert (= (cprover.str.len string_concat.13) (bvadd (cprover.str.len string_concat.s0.13) (cprover.str.len string_concat.s1.13))))
(assert (bvuge (cprover.str.len string_concat.13) (cprover.str.len string_concat.s0.13)))
(assert (bvuge (cprover.str.len string_concat.13) (cprover.str.len string_concat.s1.13)))

; set_to true (equal)
(define-fun |main::$tmp::return_value___CPROVER_uninterpreted_strcat$1!0@1#2| () cprover.String string_concat.13)

; string equal
(declare-fun string_equal.14 () Bool)
(define-fun string_equal.s1.14 () cprover.String |main::1::z!0@1#1|)
(define-fun string_equal.s2.14 () cprover.String |main::$tmp::return_value___CPROVER_uninterpreted_strcat$1!0@1#2|)
(declare-fun string_equal.idx.14 () cprover.Pos)
(assert (=> string_equal.14 (= (cprover.str.len string_equal.s1.14) (cprover.str.len string_equal.s2.14))))
(assert (forall ((?n cprover.Pos)) (=> (and string_equal.14 (bvult ?n (cprover.str.len string_equal.s1.14))) (= (select string_equal.s1.14 ?n) (select string_equal.s2.14 ?n)))))
(assert (=> (not string_equal.14) (or (not (= (cprover.str.len string_equal.s1.14) (cprover.str.len string_equal.s2.14)))
(and (bvult string_equal.idx.14 (cprover.str.len string_equal.s1.14)) (not (= (select string_equal.s1.14 string_equal.idx.14) (select string_equal.s2.14 string_equal.idx.14)))))))

; set_to true
(assert (= |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#2| string_equal.14))

; convert
(define-fun |B27| () Bool (= |main::1::k!0@1#1| |main::1::k!0@1#1|))

; convert
(define-fun |B28| () Bool (= |main::1::m!0@1#1| |main::1::m!0@1#1|))

; convert
(define-fun |B29| () Bool (= |main::1::n1!0@1#1| |main::1::n1!0@1#1|))

; convert
(define-fun |B30| () Bool (= |main::1::n2!0@1#1| |main::1::n2!0@1#1|))

; convert
(define-fun |B31| () Bool (= |main::1::x!0@1#1| |main::1::x!0@1#1|))

; convert
(define-fun |B32| () Bool (= |main::1::y!0@1#1| |main::1::y!0@1#1|))

; convert
(define-fun |B33| () Bool (= |main::1::z!0@1#1| |main::1::z!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$12!0@1#1| () cprover.String)
; convert
(define-fun |B34| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$12!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$12!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_strcat$13!0@1#1| () cprover.String)
; convert
(define-fun |B35| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_strcat$13!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_strcat$13!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#1| () Bool)
; convert
(define-fun |B36| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$9!0@1#1| () cprover.String)
; convert
(define-fun |B37| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$9!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$9!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_strcat$10!0@1#1| () cprover.String)
; convert
(define-fun |B38| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_strcat$10!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_strcat$10!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#1| () Bool)
; convert
(define-fun |B39| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$6!0@1#1| () cprover.String)
; convert
(define-fun |B40| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$6!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$6!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_strcat$7!0@1#1| () cprover.String)
; convert
(define-fun |B41| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_strcat$7!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_strcat$7!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#1| () Bool)
; convert
(define-fun |B42| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$3!0@1#1| () cprover.String)
; convert
(define-fun |B43| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$3!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_literal$3!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_strcat$4!0@1#1| () cprover.String)
; convert
(define-fun |B44| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_strcat$4!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_strcat$4!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$5!0@1#1| () Bool)
; convert
(define-fun |B45| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$5!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$5!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_strcat$1!0@1#1| () cprover.String)
; convert
(define-fun |B46| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_strcat$1!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_strcat$1!0@1#1|))

; find_symbols
(declare-fun |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#1| () Bool)
; convert
(define-fun |B47| () Bool (= |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#1| |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#1|))

; set_to true
(assert |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2|)

; set_to true
(assert |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2|)

; set_to true
(assert |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#2|)

; set_to true
(assert |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$5!0@1#2|)

; set_to true
(assert |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#2|)

; convert
(define-fun |B48| () Bool (not |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2|))

; convert
(define-fun |B49| () Bool (not |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2|))

; convert
(define-fun |B50| () Bool (not |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#2|))

; convert
(define-fun |B51| () Bool (not |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$5!0@1#2|))

; convert
(define-fun |B52| () Bool (not |main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#2|))

(check-sat)

(get-value (|B0|))
(get-value (|B1|))
(get-value (|B10|))
(get-value (|B11|))
(get-value (|B12|))
(get-value (|B13|))
(get-value (|B14|))
(get-value (|B15|))
(get-value (|B16|))
(get-value (|B17|))
(get-value (|B18|))
(get-value (|B19|))
(get-value (|B2|))
(get-value (|B20|))
(get-value (|B21|))
(get-value (|B22|))
(get-value (|B23|))
(get-value (|B24|))
(get-value (|B25|))
(get-value (|B26|))
(get-value (|B27|))
(get-value (|B28|))
(get-value (|B29|))
(get-value (|B3|))
(get-value (|B30|))
(get-value (|B31|))
(get-value (|B32|))
(get-value (|B33|))
(get-value (|B34|))
(get-value (|B35|))
(get-value (|B36|))
(get-value (|B37|))
(get-value (|B38|))
(get-value (|B39|))
(get-value (|B4|))
(get-value (|B40|))
(get-value (|B41|))
(get-value (|B42|))
(get-value (|B43|))
(get-value (|B44|))
(get-value (|B45|))
(get-value (|B46|))
(get-value (|B47|))
(get-value (|B48|))
(get-value (|B49|))
(get-value (|B5|))
(get-value (|B50|))
(get-value (|B51|))
(get-value (|B52|))
(get-value (|B6|))
(get-value (|B7|))
(get-value (|B8|))
(get-value (|B9|))
(get-value (|__CPROVER_dead_object#1|))
(get-value (|__CPROVER_deallocated#1|))
(get-value (|__CPROVER_malloc_is_new_array#1|))
(get-value (|__CPROVER_malloc_object#1|))
(get-value (|__CPROVER_malloc_size#1|))
(get-value (|__CPROVER_memory_leak#1|))
(get-value (|__CPROVER_next_thread_id#1|))
(get-value (|__CPROVER_pipe_count#1|))
(get-value (|__CPROVER_rounding_mode!0#1|))
(get-value (|__CPROVER_thread_id!0#1|))
(get-value (|__CPROVER_threads_exited#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_strcat$1!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_strcat$1!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_strcat$10!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_strcat$10!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_strcat$13!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_strcat$13!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_strcat$4!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_strcat$4!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_strcat$7!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_strcat$7!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$11!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$14!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$2!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$5!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$5!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_equal$8!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$12!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$12!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$3!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$3!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$6!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$6!0@1#2|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$9!0@1#1|))
(get-value (|main::$tmp::return_value___CPROVER_uninterpreted_string_literal$9!0@1#2|))
(get-value (|main::1::k!0@1#1|))
(get-value (|main::1::m!0@1#1|))
(get-value (|main::1::n1!0@1#1|))
(get-value (|main::1::n2!0@1#1|))
(get-value (|main::1::x!0@1#1|))
(get-value (|main::1::y!0@1#1|))
(get-value (|main::1::z!0@1#1|))

(exit)
; end of SMT2 file
