CORE
main.c
--no-standard-checks --apply-loop-contracts
^EXIT=0$
^SIGNAL=0$
^\[main\.\d+\] .* Check loop invariant before entry: SUCCESS$
^\[main\.\d+\] .* Check that loop invariant is preserved: SUCCESS$
^\[main\.\d+\] .* Check decreases clause on loop iteration: SUCCESS$
^\[main\.\d+\] .* Check loop invariant before entry: SUCCESS$
^\[main\.\d+\] .* Check that loop invariant is preserved: SUCCESS$
^\[main\.\d+\] .* Check decreases clause on loop iteration: SUCCESS$
^\[main\.assigns\.\d+\].*line 17 Check that s is assignable: SUCCESS$
^\[main\.assigns\.\d+\].*line 23 Check that s is assignable: SUCCESS$
^\[main\.assigns\.\d+\].*line 24 Check that a is assignable: SUCCESS$
^\[main\.assigns\.\d+\].*line 27 Check that s is assignable: SUCCESS$
^\[main\.assertion.\d+\] .* assertion s == n: SUCCESS$
^VERIFICATION SUCCESSFUL$
--
This test checks that nested loops, `for` loops,
and loop-local declarations of the index variable are correctly handled.
