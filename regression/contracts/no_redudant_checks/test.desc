CORE
main.c
--pointer-overflow-check _ --pointer-overflow-check --unsigned-overflow-check
^EXIT=0$
^SIGNAL=0$
^\[malloc.assertion.1\].*: SUCCESS
^\[malloc.assertion.2\].*: SUCCESS
^\[main.overflow.1\].*: SUCCESS
^\[main.pointer_arithmetic.1\].*: SUCCESS
^\[main.pointer_arithmetic.2\].*: SUCCESS
^\[main.pointer_arithmetic.3\].*: SUCCESS
^\[main.pointer_arithmetic.4\].*: SUCCESS
^\[main.pointer_arithmetic.5\].*: SUCCESS
^\[main.pointer_arithmetic.6\].*: SUCCESS
^\[main.pointer_arithmetic.7\].*: SUCCESS
^\[main.pointer_arithmetic.8\].*: SUCCESS
^\[main.pointer_arithmetic.9\].*: SUCCESS
^\[main.pointer_arithmetic.10\].*: SUCCESS
^\[main.pointer_arithmetic.11\].*: SUCCESS
^\[main.pointer_arithmetic.12\].*: SUCCESS
^\[main.pointer_arithmetic.13\].*: SUCCESS
^\[main.pointer_arithmetic.14\].*: SUCCESS
^\[main.pointer_arithmetic.15\].*: SUCCESS
^\[main.pointer_arithmetic.16\].*: SUCCESS
^\[main.pointer_arithmetic.17\].*: SUCCESS
^\[main.pointer_arithmetic.18\].*: SUCCESS
^\*\* 0 of 21 failed \(1 iterations\)
^VERIFICATION SUCCESSFUL$
--
^\[main.overflow.\d+\].*: FAILURE
--
Checks that assertions generated by the first --pointer-overflow-check:
- do not get duplicated by the second --unsigned-overflow-check
- do not get instrumented with --unsigned-overflow-check (would fail the proof)

We expect 20 assertions to be generated:
In the goto-instrument run:
- 2 for using malloc
- 18 caused by --pointer-overflow-check

In the final cbmc run:
- 0 caused by --pointer-overflow-check
- 1 caused by the --unsigned-overflow-check
