CORE
main.c
--no-standard-checks --apply-loop-contracts
^EXIT=0$
^SIGNAL=0$
^\[main\.\d+\] line .* Check loop invariant before entry: SUCCESS$
^\[main\.\d+\] line .* Check that loop invariant is preserved: SUCCESS$
^\[main.assigns.\d+\] line .* Check that i is assignable: SUCCESS$
^\[main.assigns.\d+\] line .* Check that a\[(\(signed long (long )?int\))?i\] is assignable: SUCCESS$
^\[main\.assertion\.\d+\] line .* assertion a\[10\] == 1: SUCCESS$
^VERIFICATION SUCCESSFUL$
--
^warning: ignoring
--
This test case checks the handling of a `forall` quantifier within a loop invariant.

This test case uses explicit constant bounds on the quantified variable,
so that it can be unrolled (to conjunctions) with the SAT backend.
