CORE
main.c
--enforce-contract foo --replace-call-with-contract bar --replace-call-with-contract baz
^EXIT=0$
^SIGNAL=0$
^VERIFICATION SUCCESSFUL$
SUCCESS
// bar
ASSERT \*foo::x > 0
IF ¬\(\*foo::x = 3\) THEN GOTO \d
ASSIGN .*::tmp_if_expr := \(\*\(.*0.*\) = 5 \? true : false\)
ASSIGN .*::tmp_if_expr\$\d := .*::tmp_if_expr \? true : false
ASSUME .*::tmp_if_expr\$\d
// baz
IF ¬\(z ≠ NULL\) THEN GOTO \d
ASSIGN .*::tmp_if_expr\$\d := \(\*z = 7 \? true : false\)
ASSUME .*::tmp_if_expr\$\d
--
\[3\] file main\.c line 6 assertion: FAILURE
--
Verification:
This test checks support for a NULL pointer that is assigned to by
a function (bar and baz). Both functions bar and baz are being replaced by
their function contracts, while the calling function foo is being checked
(by enforcing it's function contracts).
