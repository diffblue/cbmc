CORE
main.c
--no-standard-checks --enforce-contract foo1 --enforce-contract foo2 --enforce-contract foo3 --enforce-contract foo4 --enforce-contract foo5 --enforce-contract foo6 --enforce-contract foo7 --enforce-contract foo8 --enforce-contract foo9 --enforce-contract foo10 _ --pointer-primitive-check
^EXIT=0$
^SIGNAL=0$
^\[foo10.assigns.\d+\] line \d+ Check that buffer->len is assignable: SUCCESS$
^\[foo10.assigns.\d+\] line \d+ Check that buffer->aux\.allocated is assignable: SUCCESS$
^\[foo3.assigns.\d+\] line \d+ Check that y is assignable: SUCCESS$
^\[foo4.assigns.\d+\] line \d+ Check that \*c is assignable: SUCCESS$
^\[foo4.assigns.\d+\] line \d+ Check that \*x is assignable: SUCCESS$
^\[foo6.assigns.\d+\] line \d+ Check that \*buffer->data is assignable: SUCCESS$
^\[foo6.assigns.\d+\] line \d+ Check that buffer->len is assignable: SUCCESS$
^\[foo7.assigns.\d+\] line \d+ Check that \*buffer->data is assignable: SUCCESS$
^\[foo7.assigns.\d+\] line \d+ Check that buffer->len is assignable: SUCCESS$
^\[foo8.assigns.\d+\] line \d+ Check that array\[(\(.* int\))?0\] is assignable: SUCCESS$
^\[foo8.assigns.\d+\] line \d+ Check that array\[(\(.* int\))?1\] is assignable: SUCCESS$
^\[foo8.assigns.\d+\] line \d+ Check that array\[(\(.* int\))?2\] is assignable: SUCCESS$
^\[foo8.assigns.\d+\] line \d+ Check that array\[(\(.* int\))?3\] is assignable: SUCCESS$
^\[foo8.assigns.\d+\] line \d+ Check that array\[(\(.* int\))?4\] is assignable: SUCCESS$
^\[foo8.assigns.\d+\] line \d+ Check that array\[(\(.* int\))?5\] is assignable: SUCCESS$
^\[foo8.assigns.\d+\] line \d+ Check that array\[(\(.* int\))?6\] is assignable: SUCCESS$
^\[foo8.assigns.\d+\] line \d+ Check that array\[(\(.* int\))?7\] is assignable: SUCCESS$
^\[foo8.assigns.\d+\] line \d+ Check that array\[(\(.* int\))?8\] is assignable: SUCCESS$
^\[foo8.assigns.\d+\] line \d+ Check that array\[(\(.* int\))?9\] is assignable: SUCCESS$
^VERIFICATION SUCCESSFUL$
--
Checks whether CBMC parses correctly all standard cases for assigns clauses.
