#include <assert.h>

int flag1 = 0, flag2 = 0; // N boolean flags 
int turn = 0; // integer variable to hold the ID of the thread whose turn is it
int x; // variable to test mutual exclusion

void* thr1(void * arg) {
  while(1){
    flag1 = 1;
    while (flag2 >= 1) {
      if (turn != 0) {
        flag1 = 0;
        while (turn != 0) {};
        flag1 = 1;
      }
    }
    // begin: critical section
    // end: critical section
    turn = 1;
    flag1 = 0;
  }
}

void* thr2(void * arg) {
  while(1) {
    flag2 = 1;
    while (flag1 >= 1) {
      if (turn != 1) {
        flag2 = 0;
        while (turn != 1) {};
        flag2 = 1;
      }
    }
    // begin: critical section
    // end: critical section
    turn = 1;
    flag2 = 0;
  }
}

int main()
{
  __CPROVER_ASYNC_0: thr1(0);
  thr2(0);
  return 0;
}
