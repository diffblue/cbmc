name: Build and Test CBMC
on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
env:
  cvc5-version: "1.0.0"

jobs:
  # This job takes approximately 49 to 70 minutes
  check-vs-2019-cmake-build-and-test:
    runs-on: windows-2019
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: nuget/setup-nuget@v1
        with:
          nuget-version: '5.8.x'
      - name: Fetch dependencies
        run: |
          choco install winflexbison3
          if($LastExitCode -ne 0)
          {
            Write-Output "::error ::Dependency installation via Chocolatey failed."
            exit $LastExitCode
          }
          nuget install clcache -OutputDirectory "c:\tools" -ExcludeVersion -Version 4.1.0
          echo "c:\tools\clcache\clcache-4.1.0" >> $env:GITHUB_PATH
          Invoke-WebRequest -Uri https://github.com/Z3Prover/z3/releases/download/z3-4.8.10/z3-4.8.10-x64-win.zip -OutFile .\z3.zip
          Expand-Archive -LiteralPath '.\z3.Zip' -DestinationPath C:\tools
          echo "c:\tools\z3-4.8.10-x64-win\bin;" >> $env:GITHUB_PATH
          New-Item -ItemType directory "C:\tools\cvc5"
          Invoke-WebRequest -Uri https://github.com/cvc5/cvc5/releases/download/cvc5-${{env.cvc5-version}}/cvc5-Win64.exe -OutFile c:\tools\cvc5\cvc5.exe
          echo "c:\tools\cvc5;" >> $env:GITHUB_PATH
      - name: Confirm z3 solver is available and log the version installed
        run: z3 --version
      - name: Confirm cvc5 solver is available and log the version installed
        run: cvc5 --version
      - name: Setup Visual Studio environment
        uses: microsoft/setup-msbuild@v1
      - name: Prepare ccache
        uses: actions/cache@v3
        with:
          path: .ccache
          key: ${{ runner.os }}-msbuild-${{ github.ref }}-${{ github.sha }}-PR
          restore-keys: |
            ${{ runner.os }}-msbuild-${{ github.ref }}
            ${{ runner.os }}-msbuild
      - name: ccache environment
        run: |
          echo "CLCACHE_BASEDIR=$((Get-Item -Path '.\').FullName)" >> $env:GITHUB_ENV
          echo "CLCACHE_DIR=$pwd\.ccache" >> $env:GITHUB_ENV
      - name: What is in chocolatey
        run: dir C:\ProgramData\chocolatey\bin\
      - name: Run CBMC regression tests
        run: make CXX=clcache BUILD_ENV=MSVC -C regression/cpp-linter test

  # This job takes approximately 65 to 84 minutes
  check-vs-2022-make-build-and-test:
    runs-on: windows-2022
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Canary python 1
        run: |
          python --version
          python -c "import sys; print('Fotis was here'); print(sys.executable)"
      - uses: nuget/setup-nuget@v1
        with:
          nuget-version: '5.8.x'
      - name: Canary python 2
        run: |
          python --version
          python -c "import sys; print('Fotis was here'); print(sys.executable)"
      - name: Fetch dependencies
        run: |
          choco install -y winflexbison3 strawberryperl wget
          if($LastExitCode -ne 0)
          {
            Write-Output "::error ::Dependency installation via Chocolatey failed."
            exit $LastExitCode
          }
          nuget install clcache -OutputDirectory "c:\tools" -ExcludeVersion -Version 4.1.0
          echo "c:\tools\clcache\clcache-4.1.0" >> $env:GITHUB_PATH
          echo "c:\ProgramData\chocolatey\bin" >> $env:GITHUB_PATH
          echo "c:\Strawberry\" >> $env:GITHUB_PATH
          Invoke-WebRequest -Uri https://github.com/Z3Prover/z3/releases/download/z3-4.8.10/z3-4.8.10-x64-win.zip -OutFile .\z3.zip
          Expand-Archive -LiteralPath '.\z3.Zip' -DestinationPath C:\tools
          echo "c:\tools\z3-4.8.10-x64-win\bin;" >> $env:GITHUB_PATH
          New-Item -ItemType directory "C:\tools\cvc5"
          wget.exe -O c:\tools\cvc5\cvc5.exe https://github.com/cvc5/cvc5/releases/download/cvc5-${{env.cvc5-version}}/cvc5-Win64.exe
          echo "c:\tools\cvc5;" >> $env:GITHUB_PATH
      - name: Canary python 3
        run: |
          python --version
          python -c "import sys; print('Fotis was here'); print(sys.executable)"
      - name: Fetch python
        run: |
          choco uninstall python
          dir
          # C:\ProgramData\chocolatey\bin\python3.11.exe -c "print('[DEBUG] Fotis was here')"
          python -c "print('[DEBUG] Fotis was here')"
          python example.py
      - name: Confirm z3 solver is available and log the version installed
        run: z3 --version
      - name: Confirm cvc5 solver is available and log the version installed
        run: cvc5 --version
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
      - name: Initialise Developer Command Line
        uses: ilammy/msvc-dev-cmd@v1
      - name: Prepare ccache
        uses: actions/cache@v3
        with:
          path: .ccache
          key: ${{ runner.os }}-msbuild-make-${{ github.ref }}-${{ github.sha }}-PR
          restore-keys: |
            ${{ runner.os }}-msbuild-make-${{ github.ref }}
            ${{ runner.os }}-msbuild-make
      - name: ccache environment
        run: |
          echo "CLCACHE_BASEDIR=$((Get-Item -Path '.\').FullName)" >> $env:GITHUB_ENV
          echo "CLCACHE_DIR=$pwd\.ccache" >> $env:GITHUB_ENV
      - name: Download minisat with make
        run: make -C src minisat2-download
      - name: Build jbmc with make
        run: |
          make CXX=clcache -j2 -C jbmc/src setup-submodules
      - name: Print ccache stats
        run: clcache -s
      - name: What is in chocolatey
        run: dir C:\ProgramData\chocolatey\bin\
      - name: What is in hostedtoolcache
        run: dir C:\hostedtoolcache\windows\Python\3.7.9\x64\
      - name: Run CBMC regression tests
        run: make CXX=clcache BUILD_ENV=MSVC -C regression/cpp-linter test
